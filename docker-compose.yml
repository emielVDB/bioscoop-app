version: '3'
services:
  frontend:
    container_name: 'frontend'
    build: ./frontend
    ports:
      - "7777:80"
  halldb:
    image: 'mongo'
    container_name: 'halldb'
    environment:
      # provide your credentials here
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - mongo-volume:/data/db
    ports:
      - '27017:27017'

  mediadb:
    image: 'mongo'
    container_name: 'mediadb'
    environment:
      # provide your credentials here
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root

    ports:
      - '27020:27017'

  scheduledb:
    image: mysql:5.7
    container_name: 'scheduledb'
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: scheduledb
    expose:
      - '3308'
    ports:
      - '3308:3306'

  advertisementdb:
    image: mysql:5.7
    container_name: 'advertisementdb'
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: advertisementdb
    expose:
      - '3310'
    ports:
      - '3310:3306'

  staffdb:
    image: mysql:5.7
    container_name: 'staffdb'
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: staffdb
    expose:
      - '3309'
    ports:
      - '3309:3306'

  ticketdb:
    image: mysql:5.7
    container_name: 'ticketdb'
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ticketdb
    expose:
      - "3307"
    ports:
      - '3307:3306'

  cateringdb:
    image: mysql:5.7
    container_name: 'cateringdb'
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cateringdb
    expose:
      - "3306"
    ports:
      - '3306:3306'

  zookeeper:
    container_name: 'zookeeper'
    image: confluentinc/cp-zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"

  kafkabroker:
    container_name: 'kafkabroker'
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafkabroker:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
  gateway:
    container_name: 'gateway'
    build: ./bioscoop-app-api-gateway
    links:
      - schedule
      - staff
      - hall
      - ticket
      - media
    ports:
      - "3000:3000"
  staff:
    container_name: 'staff'
    build: ./bioscoop-app-staff-service
    links:
      - staffdb
      - schedule
    depends_on:
      - staffdb
      - schedule
    ports:
      - "2224:2224"
  schedule:
    container_name: 'schedule'
    build: ./bioscoop-app-schedule-service
    links:
      - scheduledb
      - kafkabroker
      - zookeeper
    depends_on:
      - scheduledb
      - kafkabroker
      - zookeeper
    ports:
      - "2223:2223"
  hall:
    container_name: 'hall'
    build: ./bioscoop-app-hall-mgmt-service
    links:
      - halldb
      - kafkabroker
      - zookeeper
    depends_on:
      - halldb
      - kafkabroker
      - zookeeper
    ports:
      - "2221:2221"
  ticket:
    container_name: 'ticket'
    build: ./bioscoop-app-tickets-service
    links:
      - ticketdb
      - kafkabroker
      - zookeeper
    depends_on:
      - ticketdb
      - kafkabroker
      - zookeeper
    ports:
      - "2222:2222"
  media:
    container_name: 'media'
    build: ./bioscoop-app-media-service
    links:
      - mediadb
    depends_on:
      - mediadb
    ports:
      - "2225:2225"
  advertisement:
    container_name: 'advertisement'
    build: ./bioscoop-app-advertisement-schedule-service
    links:
      - advertisementdb
    depends_on:
      - advertisementdb
    ports:
      - "2226:2226"
  catering:
    container_name: 'catering'
    build: ./bioscoop-app-catering-service
    links:
      - cateringdb
      - kafkabroker
      - zookeeper
    depends_on:
      - cateringdb
      - kafkabroker
      - zookeeper
    ports:
      - "2227:2227"
  statistics:
    container_name: 'statistics'
    build: ./bioscoop-app-statistics-service
    links:
      - kafkabroker
      - zookeeper
    depends_on:
      - kafkabroker
      - zookeeper
    ports:
      - "2228:2228"


volumes:
  mongo-volume:

